name: "AlexNet"
layer {
  name: "pair_data"
  type: "Data"
  top: "data"
  top: "label"
  #transform_param {
 #   mirror: 1
#	crop_size: 64
  #}
  data_param {
    source: "lmdb_metric_crop"
    batch_size: 128
	backend: LMDB
  }
}
# layer {
# 	name: "data"
# 	type: "HDF5Data"
# 	top: "data"
# 	top: "label"
# 	hdf5_data_param {
# 		source: "metric_shuf.txt"
# 		batch_size: 64
# 	}
# }
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "data"
  top: "data_b"
  top: "data_p"
  slice_param {
    slice_dim: 1
	slice_point: 3
  }
}
# ===== BASE =====
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data_b"
  top: "conv1"
  param {
	name: "conv1"
    lr_mult: 0
    decay_mult: 0
  }
  param {
	name: "conv1_b"
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
	name: "conv2"
    lr_mult: 0
    decay_mult: 0
  }
  param {
    name: "conv2_b"
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
	name: "conv3"
    lr_mult: 0
    decay_mult: 0
  }
  param {
	name: "conv3_b"
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
	name: "conv4"
    lr_mult: 0.01
    decay_mult: 0.01
  }
  param {
	name: "conv4_b"
    lr_mult: 0.01
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
	name: "conv5"
    lr_mult: 0.05
    decay_mult: 0.05
  }
  param {
	name: "conv5_b"
    lr_mult: 0.1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "ip6"
  param {
	name: "ip6"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "ip6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "ip6"
  top: "ip6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "ip6"
  top: "ip6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip7"
  type: "InnerProduct"
  bottom: "ip6"
  top: "ip7"
  param {
	name: "ip7"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "ip7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "ip7"
  top: "ip7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "ip7"
  top: "ip7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip8"
  type: "InnerProduct"
  bottom: "ip7"
  top: "feat"
  param {
	name: "ip8"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "ip8_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

# ===== PAIR =====

layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
	name: "conv1"
    lr_mult: 0
    decay_mult: 0
  }
  param {
	name: "conv1_b"
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "conv1_p"
  top: "conv1_p"
}
layer {
  name: "norm1_p"
  type: "LRN"
  bottom: "conv1_p"
  top: "norm1_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "norm1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
	name: "conv2"
    lr_mult: 0
    decay_mult: 0
  }
  param {
    name: "conv2_b"
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2_p"
  type: "ReLU"
  bottom: "conv2_p"
  top: "conv2_p"
}
layer {
  name: "norm2_p"
  type: "LRN"
  bottom: "conv2_p"
  top: "norm2_p"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "norm2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_p"
  type: "Convolution"
  bottom: "pool2_p"
  top: "conv3_p"
  param {
	name: "conv3"
    lr_mult: 0
    decay_mult: 0
  }
  param {
	name: "conv3_b"
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_p"
  type: "ReLU"
  bottom: "conv3_p"
  top: "conv3_p"
}
layer {
  name: "conv4_p"
  type: "Convolution"
  bottom: "conv3_p"
  top: "conv4_p"
  param {
	name: "conv4"
    lr_mult: 0.01
    decay_mult: 0.01
  }
  param {
	name: "conv4_b"
    lr_mult: 0.01
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4_p"
  type: "ReLU"
  bottom: "conv4_p"
  top: "conv4_p"
}
layer {
  name: "conv5_p"
  type: "Convolution"
  bottom: "conv4_p"
  top: "conv5_p"
  param {
	name: "conv5"
    lr_mult: 0.05
    decay_mult: 0.05
  }
  param {
	name: "conv5_b"
    lr_mult: 0.1
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5_p"
  type: "ReLU"
  bottom: "conv5_p"
  top: "conv5_p"
}
layer {
  name: "pool5_p"
  type: "Pooling"
  bottom: "conv5_p"
  top: "pool5_p"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip6_p"
  type: "InnerProduct"
  bottom: "pool5_p"
  top: "ip6_p"
  param {
	name: "ip6"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "ip6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6_p"
  type: "ReLU"
  bottom: "ip6_p"
  top: "ip6_p"
}
layer {
  name: "drop6_p"
  type: "Dropout"
  bottom: "ip6_p"
  top: "ip6_p"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip7_p"
  type: "InnerProduct"
  bottom: "ip6_p"
  top: "ip7_p"
  param {
	name: "ip7"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "ip7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7_p"
  type: "ReLU"
  bottom: "ip7_p"
  top: "ip7_p"
}
layer {
  name: "drop7_p"
  type: "Dropout"
  bottom: "ip7_p"
  top: "ip7_p"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip8_p"
  type: "InnerProduct"
  bottom: "ip7_p"
  top: "feat_p"
  param {
	name: "ip8"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "ip8_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
# ===== LOSS =====
layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "feat"
  bottom: "feat_p"
  bottom: "label"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}
