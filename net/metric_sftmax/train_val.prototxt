name: "metric"
layer {
	name: "data"
	type: "HDF5Data"
	top: "data"
	top: "label"
	hdf5_data_param {
		source: "metric_shuf.txt"
		batch_size: 64
	}
}
layer {
	name: "data_slice"
	type: "Slice"
	bottom: "data"
	top: "data_A"
	top: "data_B"
	slice_param {
		slice_dim: 1
		slice_point: 3
	}
}
layer {
	name: "label_slice"
	type: "Slice"
	bottom: "label"
	top: "label_A"
	top: "label_B"
	top: "label_S"
	slice_param {
		slice_dim: 1
		slice_point: 1
		slice_point: 2
	}
}

# ===== A tunnel =====

layer {
	name: "conv1_A"
	type: "Convolution"
	bottom: "data_A"
	top: "conv1_A"
	param { name: "conv1_W" }
	param { name: "conv1_b" }
	convolution_param {
		num_output: 12
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu1_A"
	type: "ReLU"
	bottom: "conv1_A"
	top: "conv1_A"
}

layer {
	name: "pool1_A"
	type: "Pooling"
	bottom: "conv1_A"
	top: "pool1_A"
	pooling_param {
		pool: AVE
		kernel_size: 2
		stride: 2
	}
}

layer {
	name: "ip1_A"
	type: "InnerProduct"
	bottom: "pool1_A"
	top: "ip1_A"
	param { name: "ip1_W" }
	param { name: "ip1_b" }
	inner_product_param {
		num_output: 256
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "softmax"
	type: "Softmax"
	bottom: "ip1_A"
	top: "feat_A"
}

# ===== B tunnel =====

layer {
	name: "conv1_B"
	type: "Convolution"
	bottom: "data_B"
	top: "conv1_B"
	param { name: "conv1_W" }
	param { name: "conv1_b" }
	convolution_param {
		num_output: 12
		kernel_size: 4
		stride: 2
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu1_B"
	type: "ReLU"
	bottom: "conv1_B"
	top: "conv1_B"
}

layer {
	name: "pool1_B"
	type: "Pooling"
	bottom: "conv1_B"
	top: "pool1_B"
	pooling_param {
		pool: AVE
		kernel_size: 2
		stride: 2
	}
}

layer {
	name: "ip1_B"
	type: "InnerProduct"
	bottom: "pool1_B"
	top: "ip1_B"
	param { name: "ip1_W" }
	param { name: "ip1_b" }
	inner_product_param {
		num_output: 256
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "softmax"
	type: "Softmax"
	bottom: "ip1_B"
	top: "feat_B"
}

# ===== LOSS =====

layer {
	name: "silence"
	type: "Silence"
	bottom: "label_A"
	bottom: "label_B"
}

layer {
	name: "validation"
	type: "ContrastiveLoss"
	bottom: "feat_A"
	bottom: "feat_B"
	bottom: "label_S"
	top: "loss"
	contrastive_loss_param {
		margin: 5
	}
}
